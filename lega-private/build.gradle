import se.nbis.lega.deployment.*
import se.nbis.lega.deployment.cluster.Machine
import se.nbis.lega.deployment.lega.priv.*

import java.util.stream.Collectors

task removeVolumes(type: RemoveVolumesTask) {
    setGroup Groups.LEGA_PRIVATE.getName()

    setMachineName Machine.LEGA_PRIVATE.getName()
    setVolumes Arrays.stream(Volume.values()).map { v -> v.getName() }.collect(Collectors.toSet())
}

task clearConfiguration(type: ClearConfigurationTask) {
    setGroup Groups.LEGA_PRIVATE.getName()

    setMachineName Machine.LEGA_PRIVATE.getName()
    setConfigs Arrays.stream(Config.values()).map { c -> c.getName() }.collect(Collectors.toSet())
}

task createMQConfiguration(type: CreateMQConfigurationTask)

task createDBConfiguration(type: CreateDBConfigurationTask)

task createInboxS3Configuration(type: CreateInboxS3ConfigurationTask)

task createVaultS3Configuration(type: CreateVaultS3ConfigurationTask)

task createKeysConfiguration(type: CreateKeysConfigurationTask)

task createKeysIniConfiguration(type: CreateKeysIniConfigurationTask) {
    dependsOn "createKeysConfiguration"
}

task createConfIniConfiguration(type: CreateConfIniConfigurationTask) {
    dependsOn "createDBConfiguration", "createInboxS3Configuration", "createVaultS3Configuration"
}

task createConfiguration {
    setGroup Groups.LEGA_PRIVATE.getName()

    dependsOn "clearConfiguration",
            "createConfIniConfiguration",
            "createKeysIniConfiguration",
            "createMQConfiguration"
}

task deployStack(type: DeployStackTask) {
    setGroup Groups.LEGA_PRIVATE.getName()

    setComposeFile file("docker-stack.yml").absolutePath
    setMachineName Machine.LEGA_PRIVATE.getName()
    setEnvironment getTraceAsMap()
}

task removeStack(type: RemoveStackTask) {
    setGroup Groups.LEGA_PRIVATE.getName()

    setMachineName Machine.LEGA_PRIVATE.getName()
}
