import se.nbis.lega.deployment.PruneTask
import se.nbis.lega.deployment.RemoveCEGATmpTask
import se.nbis.lega.deployment.test.EncryptFileTask
import se.nbis.lega.deployment.test.GenerateFileTask
import se.nbis.lega.deployment.test.IngestFileTask
import se.nbis.lega.deployment.test.UploadFileTask
import se.nbis.lega.deployment.test.VerifyTask
import se.nbis.lega.deployment.test.TestTask

plugins {
    id 'com.gradle.build-scan' version '2.0.2'
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

task purge() {
    setGroup "swarm"

    dependsOn ":lega-public:removeVolumes", ":lega-private:removeVolumes"
}

task prune(type: PruneTask) {
    setGroup "swarm"
    setMachineName("")
}

task clean() {
    setGroup "swarm"

    dependsOn ":cega:clearConfiguration", ":lega-public:clearConfiguration", ":lega-private:clearConfiguration"
    doLast {
        new File(".tmp").deleteDir()
    }
}

task cleanAll() {
    setGroup "swarm"

    dependsOn "rm", "purge", "clean"
}

task bootstrap() {
    setGroup "swarm"

    dependsOn ":common:createConfiguration", ":cega:createConfiguration", ":lega-private:createConfiguration", ":lega-public:createConfiguration"
}

task deploy() {
    setGroup "swarm"

    dependsOn ":cega:deployStack"
    dependsOn ":lega-private:deployStack"
    dependsOn ":lega-public:deployStack"
}

task rm() {
    setGroup "swarm"

    dependsOn ":cega:removeStack"
    dependsOn ":lega-private:removeStack"
    dependsOn ":lega-public:removeStack"
}

task ls() {
    setGroup "swarm"

    doLast {
        exec {
            executable "docker"
            args "service", "list"
        }
    }
}

task file(type: GenerateFileTask)

task encrypt(type: EncryptFileTask)

task upload(type: UploadFileTask)

task ingest(type: IngestFileTask)

task verify(type: VerifyTask)
