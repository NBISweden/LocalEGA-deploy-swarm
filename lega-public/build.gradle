import se.nbis.lega.deployment.*
import se.nbis.lega.deployment.cluster.Machine
import se.nbis.lega.deployment.lega.pub.*

import java.util.stream.Collectors

task removeVolumes(type: RemoveVolumesTask) {
    setGroup Groups.LEGA_PUBLIC.getName()

    setMachineName Machine.LEGA_PUBLIC.getName()
    setVolumes Arrays.stream(Volume.values()).map { v -> v.getName() }.collect(Collectors.toSet())
}

task clearConfiguration(type: ClearConfigurationTask) {
    setGroup Groups.LEGA_PUBLIC.getName()

    setMachineName Machine.LEGA_PUBLIC.getName()
    setConfigs Arrays.stream(Config.values()).map { c -> c.getName() }.collect(Collectors.toSet())
}

task createMQConfiguration(type: CreateMQConfigurationTask)

task createInboxConfiguration(type: CreateInboxConfigurationTask)

task createConfiguration {
    setGroup Groups.LEGA_PUBLIC.getName()

    dependsOn "clearConfiguration", "createMQConfiguration", "createInboxConfiguration"
}

task deployStack(type: DeployStackTask) {
    setGroup Groups.LEGA_PUBLIC.getName()

    setComposeFile file("docker-stack.yml").absolutePath
    setMachineName Machine.LEGA_PUBLIC.getName()
    setEnvironment getTraceAsMap()
}

task removeStack(type: RemoveStackTask) {
    setGroup Groups.LEGA_PUBLIC.getName()

    setMachineName Machine.LEGA_PUBLIC.getName()
}
