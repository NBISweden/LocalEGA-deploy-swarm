pipeline {

  agent any

  options { disableConcurrentBuilds() }

  
  stages {
  
    stage('master'){
      environment {
        LEGA_private_IP = sh(
                        script: "printf \$(docker-machine ip lega-private-staging)",
                        returnStdout: true
                )
        LEGA_public_IP = sh(
                        script: "printf \$(docker-machine ip lega-public-staging)",
                        returnStdout: true
                )
        CEGA_IP = sh(
                        script: "printf \$(docker-machine ip cega-staging)",
                        returnStdout: true
                )
        }
        when {
           branch "feature/isolate-networks"
        }
        stages{
          stage('Tear down') {
            steps {
                sh '''
                  gradle :cega:removeStack -Pmachine=cega-staging --stacktrace
                  gradle :lega-private:removeStack -Pmachine=lega-private-staging --stacktrace
                  gradle :lega-public:removeStack -Pmachine=lega-public-staging --stacktrace
    
                  sleep 20
    
                  gradle prune -Pmachine=cega-staging --stacktrace
                  gradle prune -Pmachine=lega-private-staging --stacktrace
                  gradle prune -Pmachine=lega-public-staging --stacktrace
                '''
            }
          }
         
          stage('Bootstrap') {
            steps {
                sh '''
                  gradle :cega:createConfiguration \
                      -Pmachine=cega-staging \
                      --stacktrace
      
                  gradle :lega-private:createConfiguration \
                      -Pmachine=lega-private-staging \
                      --stacktrace
      
                  gradle :lega-public:createConfiguration \
                      -Pmachine=lega-public-staging \
                      -PcegaIP=${CEGA_IP} \
                      -PlegaPrivateIP=${LEGA_private_IP} \
                      --stacktrace
                '''
            }
          }
      
          stage('Deploy') {
            steps {
            parallel(
                  "CEGA": {
                    sh '''
                      gradle :cega:deployStack -Pmachine=cega-staging --stacktrace
                    '''
                  },
                  "LEGA Public": {
                    sh '''
                      gradle :lega-public:deployStack -Pmachine=lega-public-staging --stacktrace
                    '''
                  },
                  "LEGA Private": {
                    sh '''
                      gradle :lega-private:deployStack -Pmachine=lega-private-staging --stacktrace
                    '''
                  }
                )
            }
          }
          stage('Initialization') {
            steps {
              sh '''
                sleep 80
              '''
            }
          }
          stage('Test') {
            steps {
              sh '''
                gradle ingest \
                  -PcegaIP=${CEGA_IP} \
                  -PlegaPublicIP=${LEGA_public_IP} \
                  -PlegaPrivateIP=${LEGA_private_IP} \
                  --stacktrace
              '''
            }
          }
        }
        
        post('Logging') {
          failure {
              sh '''
                eval "$(docker-machine env lega-public-staging)"
                echo '---=== lega-public-staging_inbox Logs ===---'
                docker service logs lega-public-staging_inbox
                echo '---=== lega-public-staging_mq Logs ===---'
                docker service logs lega-public-staging_mq
              '''
              sh '''
                eval "$(docker-machine env cega-staging)"
                echo '---=== cega-staging_cega-mq Logs ===---'
                docker service logs cega-staging_cega-mq
              '''
              sh '''
                eval "$(docker-machine env lega-private-staging)"
                echo '---=== lega-private-staging-mq Logs ===---'
                docker service logs lega-private-staging_mq
                echo '---=== lega-private-staging_ingest Logs ===---'
                docker service logs lega-private-staging_ingest
                echo '---=== lega-private-staging_inbox-s3 Logs ===---'
                docker service logs lega-private-staging_inbox-s3
                echo '---=== lega-private-staging_vault-s3 Logs ===---'
                docker service logs lega-private-staging_vault-s3
                echo '---=== lega-private-staging_db Logs ===---'
                docker service logs lega-private-staging_db
                echo '---=== lega-private-staging_verify Logs ===---'
                docker service logs lega-private-staging_verify
              '''
          }
        }
    }
    
    
  }
  
  
}
