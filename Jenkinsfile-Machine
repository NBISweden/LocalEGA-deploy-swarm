pipeline {
  
  agent any
  
  triggers {
    cron('0 0 * * *')
    upstream(upstreamProjects: 'LocalEGA Build Trigger')
  }
  
  environment {
    OS_USERNAME=credentials('OS_USERNAME')
    OS_PASSWORD=credentials('OS_PASSWORD')
    OS_TENANT_ID=credentials('OS_TENANT_ID')
    OS_DOMAIN_NAME=credentials('OS_DOMAIN_NAME')
    OS_AUTH_URL=credentials('OS_AUTH_URL')
    OS_IDENTITY_API_VERSION=credentials('OS_IDENTITY_API_VERSION')
    OS_REGION_NAME=credentials('OS_REGION_NAME')
    OS_NETWORK_NAME=credentials('OS_NETWORK_NAME')
    OS_SECURITY_GROUPS=credentials('OS_SECURITY_GROUPS')
    OS_SSH_USER=credentials('OS_SSH_USER')
    OS_FLAVOR_NAME=credentials('OS_FLAVOR_NAME')
    OS_IMAGE_ID=credentials('OS_IMAGE_ID')
    GIT_COMMIT_SHORT = sh(
                    script: "printf \$(git rev-parse --short ${GIT_COMMIT})",
                    returnStdout: true
            )
  }
  
  stages {
    stage('Create VMs') {
      steps {
        parallel(
         "LEGA-private": {
            sh '''
              docker-machine create --driver generic \
                --generic-ip-address=158.37.63.36 \
                --generic-ssh-user=ubuntu \
                --generic-ssh-key=tsd.pem \
                LEGA-private-${GIT_COMMIT_SHORT}
              eval "$(docker-machine env LEGA-private-${GIT_COMMIT_SHORT})"
              docker swarm init
            '''
           },
         "LEGA-public": {
            sh '''
              docker-machine create --driver generic \
                --generic-ip-address=158.37.63.170 \
                --generic-ssh-user=ubuntu \
                --generic-ssh-key=tsd.pem \
                LEGA-public-${GIT_COMMIT_SHORT}
              eval "$(docker-machine env LEGA-public-${GIT_COMMIT_SHORT})"
              docker swarm init
            '''
           },
         "CEGA": {
            sh '''
              docker-machine create --driver generic \
                --generic-ip-address=158.39.75.139 \
                --generic-ssh-user=ubuntu \
                --generic-ssh-key=tsd.pem \
                CEGA-${GIT_COMMIT_SHORT}
              eval "$(docker-machine env CEGA-${GIT_COMMIT_SHORT})"
              docker swarm init
            '''
           }
         )
      }
    }
    stage('Bootstrap private') {
      steps {
        sh '''
          eval "$(docker-machine env LEGA-private-${GIT_COMMIT_SHORT})"
          gradle bootstrap
        '''
      }
    }

    stage('Deploy private') {
      steps {
        sh '''
          eval "$(docker-machine env LEGA-private-${GIT_COMMIT_SHORT})"
          gradle deployPrivate
          sleep 30
          gradle ls
        '''
      }
    }
    stage('Bootstrap public') {
      steps {
        sh '''
          eval "$(docker-machine env LEGA-public-${GIT_COMMIT_SHORT})"
          gradle bootstrap
        '''
      }
    }
    stage('Deploy public') {
      steps {
        sh '''
          eval "$(docker-machine env LEGA-public-${GIT_COMMIT_SHORT})"
          gradle deployPublic
          sleep 60
          gradle ls
        '''
      }
    }
    stage('Test') {
      steps {
        sh '''
          eval "$(docker-machine env LEGA-public-${GIT_COMMIT_SHORT})"
          gradle ingest
        '''
      }
    }
  }
  
  post('Remove VM') { 
    failure {
        sh '''
          eval "$(docker-machine env LEGA-public-${GIT_COMMIT_SHORT})"
          echo '---=== lega-public_inbox Logs ===---'
          docker service logs lega-public_inbox
          echo '---=== cega_cega-mq Logs ===---'
          docker service logs cega_cega-mq
          echo '---=== lega-public_mq Logs ===---'
          docker service logs lega-public_mq
        '''
        sh '''
          eval "$(docker-machine env LEGA-private-${GIT_COMMIT_SHORT})"
          echo '---=== lega-private_private-mq Logs ===---'
          docker service logs lega-private_private-mq
          echo '---=== lega-private_ingest Logs ===---'
          docker service logs lega-private_ingest
          echo '---=== lega-private_s3 Logs ===---'
          docker service logs lega-private_s3
          echo '---=== lega-private_db Logs ===---'
          docker service logs lega-private_db
          echo '---=== lega-private_verify Logs ===---'
          docker service logs lega-private_verify
        '''
    }
    always {
      steps{
        parallel(
              "CEGA": {
                              sh '''
                               eval "$(docker-machine env CEGA-${GIT_COMMIT_SHORT})"
                               docker-machine rm -y CEGA-${GIT_COMMIT_SHORT}
                               docker swarm leave --force
                                '''
              },
              "LEGA Public": {
                                sh '''
                                 eval "$(docker-machine env LEGA-public-${GIT_COMMIT_SHORT})"
                                 docker-machine rm -y LEGA-private-${GIT_COMMIT_SHORT}
                                 docker swarm leave --force
                                  '''
              },
              "LEGA Private": {
                                sh '''
                                  eval "$(docker-machine env LEGA-private-${GIT_COMMIT_SHORT})"
                                  docker-machine rm -y LEGA-public-${GIT_COMMIT_SHORT}
                                  docker swarm leave --force
                                  '''
              }
         )
       }
     }
  //  cleanup { 
  //  }
  }
  
}
